[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ai-agent-scaffold"
version = "0.1.0"
description = "A comprehensive Python SDK for integrating LLM providers and Agent frameworks"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "AI Agent Scaffold Team", email = "contact@ai-agent-scaffold.com"}
]
keywords = [
    "ai", "agent", "llm", "langchain", "langgraph", "crewai", 
    "llamaindex", "autogen", "metagpt", "scaffold", "framework"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "pydantic>=2.0.0",
    "httpx>=0.24.0",
    "rich>=13.0.0",
    "pyyaml>=6.0",
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
# LLM厂商
zhipu = ["zhipuai>=1.0.0"]
moonshot = ["openai>=1.0.0"]
tongyi = ["dashscope>=1.0.0"]
volcano = ["volcengine>=1.0.0"]
all-llm = [
    "zhipuai>=1.0.0",
    "openai>=1.0.0",
    "dashscope>=1.0.0",
    "volcengine>=1.0.0",
]

# Agent框架
langchain = [
    "langchain>=0.1.0",
    "langchain-core>=0.1.0",
    "langchain-community>=0.0.10"
]
langgraph = [
    "langgraph>=0.0.30",
    "langchain>=0.1.0"
]
crewai = ["crewai>=0.1.0"]
llamaindex = [
    "llama-index>=0.9.0",
    "llama-index-core>=0.9.0"
]
autogen = ["pyautogen>=0.2.0"]
metagpt = ["metagpt>=0.6.0"]
all-frameworks = [
    "langchain>=0.1.0",
    "langchain-core>=0.1.0",
    "langchain-community>=0.0.10",
    "langgraph>=0.0.30",
    "crewai>=0.1.0",
    "llama-index>=0.9.0",
    "llama-index-core>=0.9.0",
    "pyautogen>=0.2.0",
    "metagpt>=0.6.0",
]

# 开发依赖
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
]

# 完整安装
all = [
    "zhipuai>=1.0.0",
    "openai>=1.0.0",
    "dashscope>=1.0.0",
    "volcengine>=1.0.0",
    "langchain>=0.1.0",
    "langchain-core>=0.1.0",
    "langchain-community>=0.0.10",
    "langgraph>=0.0.30",
    "crewai>=0.1.0",
    "llama-index>=0.9.0",
    "llama-index-core>=0.9.0",
    "pyautogen>=0.2.0",
    "metagpt>=0.6.0",
]

full = [
    "zhipuai>=1.0.0",
    "openai>=1.0.0",
    "dashscope>=1.0.0",
    "volcengine>=1.0.0",
    "langchain>=0.1.0",
    "langchain-core>=0.1.0",
    "langchain-community>=0.0.10",
    "langgraph>=0.0.30",
    "crewai>=0.1.0",
    "llama-index>=0.9.0",
    "llama-index-core>=0.9.0",
    "pyautogen>=0.2.0",
    "metagpt>=0.6.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
]

[project.scripts]
ai-agent-scaffold = "ai_agent_scaffold.cli:main"

[project.urls]
"Homepage" = "https://github.com/ai-agent-scaffold/ai-agent-scaffold"
"Bug Tracker" = "https://github.com/ai-agent-scaffold/ai-agent-scaffold/issues"
"Documentation" = "https://ai-agent-scaffold.readthedocs.io/"
"Source Code" = "https://github.com/ai-agent-scaffold/ai-agent-scaffold"

# Black配置
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

# isort配置
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# MyPy配置
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "zhipuai.*",
    "dashscope.*",
    "volcengine.*",
    "langchain.*",
    "langgraph.*",
    "crewai.*",
    "llama_index.*",
    "autogen.*",
    "metagpt.*",
]
ignore_missing_imports = true

# Coverage配置
[tool.coverage.run]
source = ["ai_agent_scaffold"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py",
    "*/examples/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\):",
    "@(abc\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"